name: Version, build, publish

on:
  push:
    branches:
      - main

jobs:

  semantic_release_next_version:
    name: Next version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: lts
      - run: npm install
      - run: npx semantic-release --dry-run
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v3
        with:
          name: semantic-release
          path: |
            betula/__init__.py
            CHANGELOG.md
          retention-days: 1
    outputs:
      version: ${{ steps.semantic_release.outputs.version }}

  build_python_dist:
    name: Python build *.tar.gz
    runs-on: ubuntu-latest
    needs: semantic_release_next_version
    if: needs.semantic_release_next_version.outputs.version != ''
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: semantic-release
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v3
        with:
          name: pypi
          path: dist/*.tar.gz
          retention-days: 1

  test_python_dist:
    name: Python test *.tar.gz
    runs-on: ubuntu-latest
    needs: build_python_dist
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: pypi
          path: dist
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: python -m pip install dist/*.tar.gz

  semantic_release_publish:
    name: Publish to GitHub
    needs: test_python_dist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: lts
      - run: npm install
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload_pypi:
    name: Publish to PyPI
    needs: semantic_release_publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: pypi
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
